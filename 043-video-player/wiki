http://www.linuxcast.net/public/cast_show/7
http://diveintohtml5.info/table-of-contents.html#video (great html5 tutorial)
http://videojs.com/2011/06/lynda-com-html5-video-tutorial-released/ (video)

1. server types
   http://www.html5rocks.com/en/tutorials/video/basics/
    The most important thing to remember is to make sure your server is
    serving video files with the correct MIME type in the Content-Type header.
    If not, videos might not work properly, even if they were working on a
    local copy of your site. In an Apache httpd.conf it's enough by adding
    these lines:

        AddType video/ogg .ogv
        AddType video/mp4 .mp4
        AddType video/webm .webm

   you MUST add above to your .htaccess, according to: http://www.lynda.com/home/Player.aspx?lpk4=84987&playChapter=False
   Windows + chrome/IE sometimes can not play happycasts, so need to check this
   1. http://httpd.apache.org/docs/current/howto/htaccess.html
      use http.conf instead of .htaccess is encouraged

1. codeschool.com use mejs, not so nice
1. detect if html5 video tag, or each codecs are supported or not by opening 
   http://diveintohtml5.info/detect.html in your browser.
1. what is mp4?
    http://www.html5rocks.com/en/tutorials/video/basics/ (Very good!!!)
   One of the main concerns about using the .mp4 format is that its video codec
   (h.264) is not an open codec and the licenses that a company would have to pay
   for using it are very complex to understand. There's more information about
   this format in this video chapter.

   1. is .mov a mp4 format, or at least is it H264 encoded?
      http://diveintohtml5.info/video.html#webm-cli
      The MPEG 4 container is based on Apple’s older QuickTime container
      (.mov). Movie trailers on Apple’s website still use the older QuickTime
      container, but movies that you rent from iTunes are delivered in an MPEG
      4 container.
   1. mp4 is just a "video container"
      http://diveintohtml5.info/video.html#webm-cli

   1. MAYBE: mp4 can be played by a flash player, becasue "YouTube now uses H.264 to encode high-definition videos, playable through Adobe Flash"
   1. MAYBE:

1. BIG NEWS: firefox does not support H264, that means my .mov videos can not
   play on Linux+firefox, though can be played on chrome+Linux or Mac+firefox
   check the table on: http://diveintohtml5.info/video.html#webm-cli
   Chrome currently support everything by "will drop H264 soon"

1. check if your brower support html5#video or not?
   http://www.w3schools.com/html/html5_video.asp
   A: if not supported, show people the download link, and hide the video player or whatever
   this can be achieved by 

       <video> 
          <source src="movie.mp4" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"' />
          <source src="movie.webm" type='video/webm; codecs="vp8, vorbis"' />
          <source src="movie.ogv" type='video/ogg; codecs="theora, vorbis"' />
          Video tag not supported. Download the video <a href="movie.webm">here</a>.
       </video>
       
       Note: Because of a bug in the iPad you will need to put .mp4 as the
       first option if you want the video to be loaded in that device. That
       is, until the bug is fixed.  Another issue with the .mp4 format is that
       the type attribute needs to be more specific than other formats
       depending on the profile used to encode the video. Although the most
       common is "avc1.42E01E, mp4a.40.2", you should double check this
       profile list to be sure.

       You may also need to add `controls` in the opening video tag, if you
       are not using only the video tag to implement this,(not using videojs or other
        things), according to: http://www.lynda.com/home/Player.aspx?lpk4=84987&playChapter=False
       Yes, you can leave off the `controls` if you are doing your own controls via js
       http://www.lynda.com/home/Player.aspx?lpk4=85010&playChapter=True

       It's much nicer to have / for source tag

       It's nice to have webm come before ogg, since it's higher quality. Even
       tough webm does not help you reach a wider audience

1. videojs lynda course:
   1. 'preload' is a double edged sword: http://www.lynda.com/home/Player.aspx?lpk4=84987&playChapter=False
   1. 'autoplay' is easy, ios disable this by default to save bandwidth for mobile devices: http://www.lynda.com/home/Player.aspx?lpk4=84991&playChapter=False
   1. 'loop' not so useful: http://www.lynda.com/home/Player.aspx?lpk4=84991&playChapter=False
   1. 'poster' nice...
   1. 'widthxheight' ...
   1. 'subtitle' ...
   1. to fall back on Flash, there are some code you need to add to your site, and these code will refer to adobe.com, so maybe slow
      http://www.lynda.com/home/Player.aspx?lpk4=84991&playChapter=False
      Does videojs handle this for me?
   1. tag builder...http://videojs.com/tag-builder/
   1. flash 9+ also support H264: http://www.lynda.com/home/Player.aspx?lpk4=84991&playChapter=False
   1. if you want to customize your mp4 container, try Handbrake
1. why MP4 is widely used as the web video format?
   http://en.wikipedia.org/wiki/HTML5_video
   A: Apple and Microsoft, controlling 39% of the browser market, support only H.264
   NO single format is supported by all browsers, you have to have more than one `<source>`
   in your video tag

1. For maximum compatibility, here’s what your video workflow will look like:

   Make one version that uses WebM (VP8 + Vorbis).
   Make another version that uses H.264 baseline video and AAC “low complexity” audio in an MP4 container.
   Make another version that uses Theora video and Vorbis audio in an Ogg container.
   Link to all three video files from a single <video> element, and fall back to a Flash-based video player.

1.  I’m going to use “Ogg video” as a shorthand for “Theora video and Vorbis audio in an Ogg container.” 

1. Video + JS
   http://www.w3.org/2010/05/video/mediaevents.html

1. if I am going to explain to people what videojs is, I would better to first talk about video tag itself
   "What's a html5 video player" http://videojs.com/

1. VideoJS is super easy to use
   1. add js&css link in your header: http://videojs.com/#section5
   1. get the embed-code: http://videojs.com/tag-builder/
   1. this is all u need to get going

1. cross browser issue
   1. firefox can not play H264, so Linux+firefox can not play happycasts if jplayer does not bring a flash fallback!
      1. right click on a happycast video in Chrome and firefox, you see "adobe" in one of the case :-)

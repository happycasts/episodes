1. 说话时声音要高，要向上挑，就像福尔摩斯，就像
   http://www.lynda.com/home/Player.aspx?lpk4=114841&playChapter=True
1. It's has to be a stroy, sweet, sweet, sweet stuff
   1. the logic and usefulness is secondary
   1. All I need to foucs on it to get people's attention and interest

1. code sth samll, show sth cool
   Never do big code in the video, but small code sometimes is just not as fun.
1. having skull and meat
   make the essential things covered, but also try to make it beautiful and interesting

# show sth hard
It make no sense to share with people whatever they can VERY EASILY get by reading docs.
http://www.linuxcast.net/public/cast_show/2 Just checked this video, and rethinked what's the point to try so hard to make a cast:

  1. share sth that's really important, but really hard to figure out by themselves
  1. sure we also give a lot of details, but all the details are just for one central hard point!!!
1. how to make some moment boring? :-)
   1. It's not that we are shring sth useless, we are not as stupid as that
   1. It's that we are talking about a list of things, where the audience can be much more comfortably get by searching docs
      rather than listening to talk about the whole list that only 20% that they are really of some fun

# Get sth done
I know git and bash and things well, but if I talk about these thing, nobody will be interested. I need to help them get sth done

Like I just checked how to setup octopress: http://www.yangzhiping.com/tech/wordpress-to-jekyll.html
young devs checked the blog as well but it's hard to get this done, cause they had a hard time figuring out all the git and bash 
commands, while its easy for me, so I can lead the way, and explain a bit to help them understand.

# RailsConf 09: Chris Wanstrath, "How to become a famous Rails Developer,
BE A FAMOURS DEVELOPER
    1. have a unique name
    1. a design has a personality.
    1. a sidebar that is smiple no ads, and a header with a picture of you!!!
    1. a tagline: 
    1. rules, guidelines for your content
    1. content? foucus on the pain!!!
    1. go to conferences and talk about your pet projects

BE A GOOD RUBY DEVELOPER

    1. Code is what really matters
    1. my `spyc` project is open source and got 70 downloads that brought me everything!
    1. I met all my co-founders through code
    1. so github is about sharing code, and make friends out of the deed
    1. sourceforge is about project, github is about people+code, it's easy to show your friend a code snip with github, which is hard in sourceforge

# what's in a cast?

1. a topic as the hard core
1. all refs online with proper comments, this is important casue happycast itself is not about "learning" but "using"
   that's why I need to point people to the right place to learn.
1. ...
# Forget about theroy
Do not try to do too much.
Happycasts is about tips/skills, not understanding/explaining things
Just Be railscasts.com, NOT gitcasts.com

There is a lot of buzz on everybosy's blog about fuzzfinder, ctags, sendmail, but there is not really a nice railscasts.com quality screencast as a gateway to them, search in youtube and youku, I know I can easily makr a screencast on those things and people would love to share it. So happycasts--world's best screencasts on Linux toys.

I think every cast, shall start with "today our pain is ..., and here is the fix..."

# "Getting the job done" as the only fix
trying to talk about http://ndpsoftware.com/git-cheatsheet.html#loc=workspace
I will say: there is so much out of this diagram, I can talk about it for a day, but now I only have ten mins, so what's should be on top of the priority. Now the answer is happycasts is all above helping people who are building thing right now, so all happycasts episode will be serve the working craftsman, that is talk about things with most practical value with building things up. Pragmatic Programmer I am myself.

Q: How to decide the angle to give the talk?
A: Try to follow DHH, try to follow codeschool.com/org, try to follow Scott, all of them talk in different angle, but all of them are good options for me, since they are by their nature good programmers themselves(NOT like some Chiese stupid boring techers), following them, there is no way for happycasts to go wrong. Right now, I will try to be close to railscasts.com.

# if you don't use sth in person, don't share it.

Now I am trying to share `scope` cause I think its cool to use if you do a lot of C coding. But if you do not use it in person, you will going to make a shit, you won't have passion to update it. Also, most of your audience are people like you, so if you do not code C a lot, it is very like they do not either.
# khan Academy
http://www.youtube.com/watch?v=zxJgPHM5NYI
Q: Have you thought put yourself visually on the vedio?
A: If a funny face there, it will be hard to focus.

Q: the format is so simple, why it appeals so many people?
A: It's like I am sitting next to the person, and we are watching the paper together.
I 90% of the time walk through the problem real time, this is kind of humanity there.

# Need to be entertaining

No matter you are writing a book, or give a presentation, you are communicating with human not machine, so the talk need to concern about the homan aspect. 

some speeches really made me sleepy.
